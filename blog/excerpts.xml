<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>
        BASIC blog excerpts feed    </title>
        <link href="blog/excerpts.xml" rel="self" />
    
        <link href="/"/>
    
        
    <updated>2011-04-19T22:15:20Z</updated>

    <id>/blog/excerpts.xml/</id>

            <entry>
            <title type="html">PYPY sandbox for safe execution of arbitrary python code [PART 2]</title>
            <author><name>Lakshmi Vyasarajan</name></author>
            <link href="/blog/python-sandbox-with-pypy-part2.html"/>
            <updated>2011-04-18T10:57:00Z</updated>
            <published>2011-04-18T10:57:00Z</published>
            <id>/blog/python-sandbox-with-pypy-part2.html</id>
                        <category   scheme="/blog/tags"
                        term="pypy"
                        label="Pypy" />
                        <category   scheme="/blog/tags"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags"
                        term="sandbox"
                        label="Sandbox" />
            
            <content type="html">
                
                &lt;p&gt;&lt;a href=&#34;/blog/python-sandbox-with-pypy.html&#34;&gt;Last post&lt;/a&gt; was setting up and translating Pypy to make a sandboxed python prompt
that had it&amp;#8217;s own virtual /tmp and no system&amp;nbsp;calls.&lt;/p&gt;
&lt;p&gt;Now we&amp;#8217;ll take it a step farther and wrap it in normal python and run untrusted
python within the sandbox&amp;nbsp;programmatically.&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">PYPY sandbox for safe execution of arbitrary python code</title>
            <author><name>Lakshmi Vyasarajan</name></author>
            <link href="/blog/python-sandbox-with-pypy.html"/>
            <updated>2011-04-17T10:57:00Z</updated>
            <published>2011-04-17T10:57:00Z</published>
            <id>/blog/python-sandbox-with-pypy.html</id>
                        <category   scheme="/blog/tags"
                        term="pypy"
                        label="Pypy" />
                        <category   scheme="/blog/tags"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags"
                        term="sandbox"
                        label="Sandbox" />
            
            <content type="html">
                
                &lt;p&gt;So I wanted to run some untrusted code. Javascript looked good because it could
run in the browser (a natural sandbox). But I needed it to run server side&amp;nbsp;too. &lt;/p&gt;
&lt;p&gt;Pypy popped up on a few sites but it was a bit unclear on the use case for it at
first. But &lt;a href=&#34;http://pypy.org/features.html#sandboxing&#34;&gt;this helped&lt;/a&gt;. Plus, I like
python&amp;nbsp;:)&lt;/p&gt;            </content>
        </entry>
    </feed>